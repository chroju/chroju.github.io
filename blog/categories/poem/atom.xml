<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: poem | the world as code]]></title>
  <link href="http://chroju.github.io/blog/categories/poem/atom.xml" rel="self"/>
  <link href="http://chroju.github.io/"/>
  <updated>2016-01-20T00:53:04+09:00</updated>
  <id>http://chroju.github.io/</id>
  <author>
    <name><![CDATA[chroju]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[2016年の行動規範]]></title>
    <link href="http://chroju.github.io/blog/2016/01/03/manifesto-2016/"/>
    <updated>2016-01-03T14:02:07+09:00</updated>
    <id>http://chroju.github.io/blog/2016/01/03/manifesto-2016</id>
    <content type="html"><![CDATA[<p>うまいことまとまらないのでつらつら。</p>

<h2>問題意識</h2>

<ul>
<li>時間、お金の使い方がいまだに下手。

<ul>
<li>きちんと考えず浪費している機会が多い。</li>
<li>時間ならタスクシュート、お金ならZaimを使ったりした経験はあるが結局とまったりしている。</li>
<li>昨年は10年以上続いていた日記すらもとめてしまった。</li>
<li>何か忙しい課題が仕事なりプライベートなりに鎮座すると、他に回す手が一切なくなったりしてバランス悪い。</li>
</ul>
</li>
<li>メモ環境の再考。

<ul>
<li>インプットが「ググって終わり」の場合が多く、次にその情報が必要になったときも結局ググってる。</li>
<li>読んだ本が本当に身になっている気がしない。</li>
<li>Evernoteがメモの死蔵場になっている。</li>
<li>デジタルメモはVimと<a href="https://github.com/glidenote/memolist.vim">memolist.vim</a>を基本にしているけど、書き散らして終わってる感。</li>
</ul>
</li>
<li>技術探求の不足

<ul>
<li>やってるけどやりきれてないというか。</li>
<li>Qiitaで話題になっているのを見て、ザッと読んでなんとなく無理そうと思うと閉じちゃったり。</li>
<li>いつか使うかな？と思ってPocketにつっこんでそのまんまの積読があまりに多い。</li>
<li>流行ってる→やろうとか、こういうツールほしい→作ろうの瞬発力上げたい。</li>
<li>本読みたい。というか去年文化資本にあまりに触らなすぎた。</li>
</ul>
</li>
<li>仲間がほしい

<ul>
<li>懇親会とか行ってもその場限りの話しかできなかったりでエンジニア仲間社外にあんまいない。</li>
<li>社内の技術課題解決するのに社外で話すってのも大切そう。</li>
<li>ていうかエンジニアとしてもうちょい知名度上げてみたい。</li>
</ul>
</li>
</ul>


<h2>解消していくために</h2>

<ul>
<li>時間とお金の定量評価

<ul>
<li>お金は娯楽費にx万までみたいな予算持ってるので、時間も定量評価したい。コード書く時間を週に必ずx時間とか。</li>
<li>タイムロギングしたいけどTogglとか使うの面倒。とりあえずやってみるか。難しけりゃ1日の最後にノートに記憶から書き出すんでもいいかなと。</li>
<li>週ごとのノートにしたい。PDCA回すのにちょうど良いスパンだと思う。今週ダメなら来週帳尻合わせるとか出来るわけで。

<ul>
<li>そういう用途だと紙ノートよりEvernoteの方が良さそう。1ノートに対して1週間という形が取れるので。</li>
<li>じゃあ日記もここに載ってくる形でいっか。</li>
</ul>
</li>
</ul>
</li>
<li>メモをもっかいちゃんとする

<ul>
<li>技術テーマごとにちゃんとノート取る。ブログに上げるといった方がいいか。</li>
<li>ブログ記事にならないレベルのものはQiita。二番煎じ三番煎じでQiitaレベルに値しないものはGist。

<ul>
<li>でもGistあんまり使いやすくない……。</li>
</ul>
</li>
<li>メモを見返す時間をちゃんと作る。週次レビュー的なあれ。金曜夜が第一候補。無理なら土曜。

<ul>
<li>というかそれぐらいの時間は取れるようなスケジューリングをする。去年はそれすら難しいぐらいアホほど予定入れてた。</li>
<li>頭のなかちゃんと棚卸するの大事。</li>
</ul>
</li>
<li>手元のモレスキンはタイムライン的なリアルタイムメモ用にする。アナログは見返すの無理。ざざっと時系列で追う目的でしか使えない。</li>
</ul>
</li>
<li>散逸的な勉強をしない

<ul>
<li>とりあえずおもしろそうなもの、役に立つはずのものに片っ端から手をつけるのやめる。</li>
<li>Pocketに記事を置いとくのはいいけど、1週間ぐらい経ったら躊躇なく消す（自動化できないかな）。</li>
<li>上述の通りブログに上げることを目的としてノートを取っていく。参照する記事はノート上で繰り回す。</li>
<li>スーパーマンになろうとしない（選択と集中、less is more）</li>
</ul>
</li>
<li>技術的な瞬発力の向上

<ul>
<li>手足のように使える言語がほしい。Rubyかじったんだからちゃんとやり切る。</li>
<li>もう1個。デフォルトで入ってる言語だと楽なんだが。Pythonかなー。

<ul>
<li><a href="http://orangain.hatenablog.com/entry/python3-as-default">LinuxディストリビューションにおけるPython 3デフォルト化の流れ - orangain flavor</a></li>
</ul>
</li>
<li>実際の開発経験を積む。API叩くとかやる。動かす。</li>
<li>原則としてCLIで操作する。GUIに頼らない。コマンドでなんとかならないかとまず考える。</li>
</ul>
</li>
<li>文化資本に触れたい

<ul>
<li>1クール3本のアニメ</li>
<li>1か月2冊の小説</li>
<li>1か月2本の映画</li>
</ul>
</li>
<li>エンジニアとしての活動

<ul>
<li>なんかユーザーグループ入ってみたい。職種的に考えるとJAWS-UG？</li>
<li>これだけはという技術分野ほしい。Ansibleが今自分の中でキテるのでもっと。</li>
<li>GitHubをソーシャルにちゃんと使う。横断的な検索とかフォローとかプルリク出してみるとか。</li>
</ul>
</li>
</ul>


<h2>挑むべき技術分野</h2>

<ul>
<li>上述の通り武器言語としてのRuby、Python。</li>
<li>hubotいじる上でnode.jsを少しだけ。</li>
<li>DB経験がさらっさらと言っていいほどないのでMySQL（Mariaでいいか）とRedis。</li>
<li>インフラ関連技術は継続。Ansible、Serverspec、AWS。</li>
<li>最近流行ってるOSSツール類。Elasticsearch、HashiCorp周り、Docker、Sensu、Rundeck、</li>
<li>総合するとこれやってみるといいかも→ <a href="http://syou6162.hatenablog.com/entry/2015/12/21/000843">今年よかった習慣: ライフログ収集および可視化 - syou6162&rsquo;s blog</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2015年総括]]></title>
    <link href="http://chroju.github.io/blog/2015/12/31/looking-back-2015/"/>
    <updated>2015-12-31T19:23:47+09:00</updated>
    <id>http://chroju.github.io/blog/2015/12/31/looking-back-2015</id>
    <content type="html"><![CDATA[<p>いろいろとチャレンジングに動いてみただけに、難しい年だった。</p>

<p>今年初めの<a href="http://chroju.github.io/blog/2015/01/12/post/">「行動規範」</a>で書いた通り、就職は、した。大手SIerからいわゆるベンチャー気質な企業に転職して、働き方はだいぶ変わった。毎日Excelとにらめっこしていた生活ではなく、業務上初めてsshを実行し、いまでは毎日実行するような生活になった。</p>

<p>承認と判子と指示が行動の軸だった状態から、個々人のスキルと瞬発力と経験が物を言うような状態になり、率直に言ってついていけてない感はある。どこまでを許可無くやっちゃっていいのかわからない（いわゆるDon’t ask for permission, beg for forgiveness的文化）し、技術検証に手をつけ始めると基礎スキルが低いのでやたら時間を食ってしまい、その間に他の人にタスクを取られたりする。</p>

<p>でもまったく手応えがないわけではなくて、個人開発で使っていたスキルで食い込んでいけるところも大きいし、自分に足りない、学ぶべきことは山のように社内に転がっているので、ひたすら旺盛に吸収していきたいと思う。というかそうしない限り、エンジニアとして生きる道がない。</p>

<p>興味領域としてはDevOps方面にかなりアンテナが伸びてきている。大企業でわりとカッチリ運用設計を認めていた自分が、創業からそれなりの年数が経ち、技術的負債の増えてきたベンチャーに入ったことによる必然とも言えるのだろうが、運用上の穴や非効率な部分がとても目についていて、ルールで縛るのではなく、システム的に運用の統括を図ろうというのが目下の課題となっている。それこそInfrastructure as Codeを使うなりDockerを使うなり、もっと低レイヤーにシェルスクリプトをガリガリ書くなり。だから技術的に磨いて実践していくことが本当に多いのだけど、一方で運用方法の改変ということは社内への浸透が必要になり、政治的な問題にもなってくるので、コミュニケーション力結局必要やんけってところで非コミュな自分は悩んでいる。社内政治ほんとやだ。</p>

<p>まぁ、総じて言えば楽しく仕事はできている。だけど大きな変化は副作用的に予期しない変化を別のところでもたらしたりするものでもあって、そのバランスを取ることがなんとも難しい。貪欲であることと、単に我欲を押し通すこととはまた違うわけで、もう少しコントールが必要だと思っている。リスクテイクしたのだからその分の負担の大きさを覚悟してはいたが、わりと想定以上なところはあってストレスは大きい。年齢も年齢なので、自分が「何をすべきか」という論調よりも、周囲、世の中にとって自分は「何であるのか」という視点で動いた方が良いのかもなという気がしてきた。もう少し、置かれた場所というものも大事にしたい。</p>

<p>抽象論についつい流れてしまったけど、具体的な技術的成果はQiitaを中心に流していこうと思っているので、ブログはポエミーにこんな感じで締めてみる。また来年。</p>

<h2>おまけ：2015年定量評価</h2>

<h3>技術</h3>

<ul>
<li>Linuxのサーバー運用に従事開始。初歩的なコマンドからさらい直せてる。</li>
<li>CentOS7の業務利用開始。</li>
<li>AWSの利用を個人でも業務でも開始。ただしほぼEC2。</li>
<li>Ansible利用開始。</li>
<li>Serverspec検証開始。</li>
<li>Docker検証開始。</li>
</ul>


<h3>イベント</h3>

<ul>
<li>JAWS DAYS 2015</li>
<li>JAWS UG 初心者支部</li>
<li>デブサミ2015</li>
<li>Ansible入門イベント</li>
<li>他社の障害対応気にならNight</li>
<li>手羽の会（ハンズラボ）</li>
<li>Serverworks Sonic!</li>
<li>OSC東京 2015秋</li>
<li>Rakuten Tech 2015</li>
<li>RubyKaigi 2015</li>
<li>他</li>
</ul>


<h3>書籍</h3>

<ul>
<li>リーダブルコード</li>
<li>プログラマが知るべき97のこと</li>
<li>それがぼくには楽しかったから</li>
<li>ハッカーと画家</li>
<li>UNIXという考え方</li>
<li>インターネットのカタチ</li>
<li>Amazon Web Services パターン別構築・運用ガイド</li>
<li>シェルプログラミング実用テクニック</li>
<li>はじめてUNIXで仕事をする人が読む本</li>
<li>大規模サービス技術入門</li>
<li>Serverspec</li>
<li>CentOS7実践ガイド</li>
<li>Team Geak</li>
<li>オペレーティングシステムの基礎</li>
<li>たのしいインフラの歩き方</li>
<li>他</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[インフラエンジニアの幸福論]]></title>
    <link href="http://chroju.github.io/blog/2015/10/20/eudaemonics-of-infrastructure-engineer/"/>
    <updated>2015-10-20T23:35:46+09:00</updated>
    <id>http://chroju.github.io/blog/2015/10/20/eudaemonics-of-infrastructure-engineer</id>
    <content type="html"><![CDATA[<p>1年前、<a href="http://yapcasia.org/2014/talk/show/df196eac-fb65-11e3-b7e8-e4a96aeab6a4">インフラエンジニアは死んだ</a>。</p>

<p>遅れにも遅れをとって今年からAWSに触れているけど、これは触れれば触れるほどインフラエンジニアとしての自分の価値に疑問を抱かせてくれるサービスで、インフラエンジニアとして今後自分はどのように幸せになれるのかなんて考えたくなってくる。</p>

<p>どうもLambdaが出たあたりから<a href="http://blog.takuros.net/entry/2015/10/19/081349">サーバーレスアーキテクチャ</a>という言葉が取り沙汰されてきているようで、アプリやDBを動かすための基盤としてサーバーが必要だという前提はすでに崩れている。AWSを触れる前はVPSを触っていたので、どうもAWS＝EC2というイメージから抜け出せずにいたが、実際には<a href="http://i-think-it.net/how-to-aws">「EC2を使ったら負け」</a>なんて言葉も目にする時代にある。ここ最近Circle CIを触ってみていても、テストの実行基盤となるサーバーなんて考え方をする必要はなくて、テスト用の環境はyamlで書けてしまうし、別のインスタンスが欲しければDockerで済ませられる。まぁherokuあたりからすでにそういう風潮だったよなという気もするが、単純にアプリをデプロイしてしまって実行基盤は全部お任せという状態から、LambdaとS3とCognitoを組み合わせて云々みたいな柔軟なアーキテクチャを採用できる状態にまで変化してきている。</p>

<p>AWSを管理する人間が旧来のインフラエンジニアである必要性を当人としてはあまり感じていないし、実際に昨今のWeb企業あたりだとアプリエンジニアがAWSエンジニアを兼ねている場合も少なくないとは思う。規模が大きくなれば構成設計にインフラエンジニアの視点が必要になったりもするのかもしれないが、そこで必要とされるスキルは必ずしも旧来のインフラスキルとは直結していない。1000万円のLBとCiscoのスイッチとDELLのサーバーを買ってきて配線して起動して設定していくスキルと、ブラウザ上でELBやEC2のセキュリティグループを設定するスキルは明らかに異なるもので、故に2015年におけるインフラ＝AWSの領域においては、旧来のインフラエンジニアと非インフラエンジニアが同じ土俵で戦えなくもなかったりする（さすがに言い過ぎ感あるか）。これまで培ってきたインフラスキルというものは、必ずしも2015年に戦える武器にはなっていない。</p>

<p>もちろん一方でEC2もオンプレの環境もまだ健在ではあるし、これが10年後に撤廃されるかというと、現状のMFのように残り続けるとは思う。特に金融のような特殊領域ではどうしてもクラウド移行が難しいということもある。だから旧来のインフラエンジニアが死に絶えることはないのだろうが、それでもパイが小さくなることは事実だし、物理環境の障害だとか5年ごとのリプレースだとか、テンションの上がらない類の仕事に携わり続けることを余儀なくされる。</p>

<p>テンションの上がる仕事がしたいと言うと軽薄になってしまうが、誰だって夜中にタクシーでデータセンターに駆け付ける機会は極力少なくしたいと思うわけで、これまで注力していたいわゆる「オープン系」の需要が狭まる中で、インフラエンジニアの「幸福論」のようなものは求められつつある気がする。より少なくなる、かつ結構しんどい椅子に座り続けるのは個人的に嫌なので、Docker、ServerSpec、Ansibleあたりの領域でガッツリ存在感を示せるようになるか、あるいはそれらを生み出す側、より下のレイヤーで技術的に研ぎ澄まされていくかの二択なのかなと最近は思いつつある。とはいえ後者はどう考えても狭き門であり、現実的には前者を日常的な業務としつつ、要はRubyエンジニアがgem書くような感覚でツール作ったりOSSにイッチョカミしたりもたまにやれるぐらいの力があるといいのだろうなと思う。</p>

<p>何はともあれやはり「勉強する」以外に道がないことは今も昔も変わってないし、ある意味で過渡期にある技術として、いまインフラは面白いところにあるとは思っている。これについていけるかついていけないかっていうシンプルな問いでもあって、自分の希望としてはついていきたい。今からアプリに鞍替えする気はなく、カーネル書けるかって言えば書けないだろうし、かといって今のまま障害対応で夜に起こされるのを続けるわけにもいかない。だったら2015年におけるインフラというものを学んでいくしかないわけで、幸いなことに、学べば「物理ハードウェアからの開放」というある程度の報酬が待ち受けていることは確実になっている。どれだけ頑張ってもサーバーのファームウェアのバグで泣かされるような時代ではなく、ある意味でインフラエンジニアが「インフラを学び直す」ことは美味しい選択肢ではある。また場合によっては、インフラエンジニアとしてより良い環境へ適時シフトしていく（惰性でずっとオンプレ使う方針の会社との喧嘩は早々に諦める）こともまた必要になるのだと思っている。</p>

<p>とかなんとか書きながら考えていたら、<a href="http://blog.hifumi.info/2015/02/23/wakateinfra/">若手インフラエンジニア現状確認会</a>とやらで似たような話が上がっていた。個人的な実感としてはITエンジニア100人の企業であれば5～9人ぐらいがインフラかなと思うので、若手インフラが少ないというよりは全体的にインフラエンジニアが少ないのだと思っているが、その分情報交換とか大切にしなきゃなと思う。エンジニア仲間増やしたい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Qiitaを使うということの意義]]></title>
    <link href="http://chroju.github.io/blog/2015/08/09/qiita-commoditization-of-engineer/"/>
    <updated>2015-08-09T23:28:57+09:00</updated>
    <id>http://chroju.github.io/blog/2015/08/09/qiita-commoditization-of-engineer</id>
    <content type="html"><![CDATA[<p><a href="http://qiita.com/chroju/">Qiitaにいくつか記事を上げてみて</a>思ったことを。</p>

<h1>承認欲求が満たしやすい</h1>

<p>ブログのような個人の場ではないのに承認欲求がってのもどうなんだという話はあるが、反応を得やすい。Qiitaでは各エントリーに必ずタグを設定することになり、ユーザーは興味のあるタグを登録して新着記事をチェックするわけだが、記事が上がってくるスピードは1日に数えられる程ではあるので、上げればほぼ必ず誰かしらの目には留まる状態にある。なので自分が上げたのは基礎的な記事ばかりだという思いはあるのだが、それでもすべて漏れなくストックされていた。</p>

<p>もちろん、100ストックなどを目指すとハードルはぐっと上がってくるわけだが、こういった個人ブログで誰が見てくれているかわからない状態と比べて、記事投稿へのモチベーションは保ちやすいように感じた。なお、はてなでも同様のエコシステムは働いていて、例えばこのブログもはてな時代はそこそこブクマされていたわけだが、github.io化した後のブクマは見事にゼロである。</p>

<h1>誤り修正と議論の活性化</h1>

<p>ほぼすべての記事が誰かしらの目に触れるということで、（自分は未経験だが）コメントにより間違いの修正が入ることも多い。特に特定のタグに関してはその道の有名な方がだいぶ監視しているっぽいなぁという場合もあり、ちょこちょこコメントが付いている。</p>

<p>またコメントで長々と議論が続くのもよく見かける。単なるハウツーよりは何らかの設計思想を書いた記事に多いように思うが、派生した内容として興味深く追えることも多い。</p>

<h1>技術のコモディティ化</h1>

<p>で、ここからが本題なのだが、QiitaによってIT技術者の知識というのはある程度コモディティ化されそうだなぁと思う。</p>

<p>Qiita以前ははてななどがエンジニアのアウトプットがよくストックされる場所ではあったが、Qiitaほど体系だってまとめられていたわけではない。Qiitaでは「タグ」を追うことで、その分野の新しい話題も古い話題も、基礎も応用も知っていくことができる。逆に言えば、Qiitaに書いてあることぐらいは誰だってすぐ追って身につけられる状態にある。</p>

<p>技術書のような網羅性の高い知識パッケージとはさすがに性質を異にはするが、先に上げたコメントなどによって適宜内容が改訂され、より正しい状態に近づいていき、また必要な情報、新たな情報が次々と追加されるという意味では、動的な知識パッケージとして果たす役割は大きいのではないか。
まぁ要はブログやSNSの黎明期に言われたようなことが、Qiitaという専門性の高い1サービス内で圧縮的に再現されているというだけの話ではあるのだが、「Qiitaをやっている」というレッテルが、ある一定の知識レベルを有することと同義になる日も来そうだなという思いがする。問題点としてはQiita外と同様、やはりWeb系、OSS系の知識に内容が偏っていて、有償製品等のノウハウはそれほど多くないことだろうか。これはQiitaの問題ではないのだけど。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[the world as code]]></title>
    <link href="http://chroju.github.io/blog/2015/04/04/the-world-as-code/"/>
    <updated>2015-04-04T01:13:42+09:00</updated>
    <id>http://chroju.github.io/blog/2015/04/04/the-world-as-code</id>
    <content type="html"><![CDATA[<p>世界を構成するのはテクストである、という考え方が好きだ。より正確な言い方をするならば記号論やミーム的な考え方になるのだと思うが、記述されたもの、意味を成して認識されたものだけが実在足りうる、というような世界観をなんとなく抱いている。『ニルヤの島』では個人の生が物語へと還元され、データとして外部記憶装置へ保存されるようになった。『from the nothing, with love』では、ジェームズが自らを「生起しつつあるテクスト」であると述懐する。あるいはヘプタポッドの言語は、未来をも決定論的に「記述」する。</p>

<p>特にことインターネットの隆盛により、世界はテクストの、ミームの満ちるものへと変容しつつあるように思う。インターネット上に存在する「個人」とは、すなわちミームに他ならない。インターネットへのアクセスをしていても、能動的にテクストを紡がない個人は存在しないに等しい。この世界では個人は、あるいはあらゆる事象はデータへと還元され、そして半永久的にミームの海を彷徨っていく。</p>

<p>上述したように、最近頓に多い「言葉」に関するSFのなかで、最も好きなのは『屍者の帝国』なのだけど、ここでは人間の魂自体が「言葉」によるものと解されており、そして屍者は「言葉」によってフランケンシュタインと化す。言葉は物質化する。書物がそうであるように。歴史上の人物がそうであるように。これが自らもまた「物質化した言葉」であるはずのヴァン・ヘルシングの言葉であるというのは皮肉でもあるのだと思うが、生きとし生けるものが言葉によりもたらされるというハッキリとした記述と、それに基づいて構成された世界観は実に興味深い。</p>

<p>Infrastructure as Code、物理的な世界の技術であったはずのITインフラが、近年言語により記述され、管理、構築されるフェーズへと転換したように。Internet of Things、家電や家具といった非電子的であったはずの「モノ」たちが、APIを提供して「言語」による働きかけを許すようになったように。我々エンジニアの一つの使命は、万物の情報化であると思う。言語が支配する世界にすべてを置き換え、言語を介した制御を可能とすること。それがエンジニアとしてやるべきことなのだと。</p>

<p>私はなぜ書くのか？という問いに対する答えはあまりに簡単で、それは生きるに等しい行為だからだ。語らぬ者は存在しないのならば、語る以外に選択肢はない。世界と関わりたいのならば、言語によって働きかけていくしかない。紡いだ言葉がミームの海を流れていき、対岸でやがて物語として物質化する日を夢見る。言葉が世界を構成し、言葉が万物を紡ぎ上げて、やがて物語と化していく。</p>

<p>the world as code.</p>

<p>世界は言葉で成り立っている。</p>

<div class="amazlet-box" style="margin-bottom:0px;"><div class="amazlet-image" style="float:left;margin:0px 12px 1px 0px;"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4150114587/diary081213-22/ref=nosim/" name="amazletlink" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51191C0153L._SL160_.jpg" alt="あなたの人生の物語 (ハヤカワ文庫SF)" style="border: none;" /></a></div><div class="amazlet-info" style="line-height:120%; margin-bottom: 10px"><div class="amazlet-name" style="margin-bottom:10px;line-height:120%"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4150114587/diary081213-22/ref=nosim/" name="amazletlink" target="_blank">あなたの人生の物語 (ハヤカワ文庫SF)</a><div class="amazlet-powered-date" style="font-size:80%;margin-top:5px;line-height:120%">posted with <a href="http://www.amazlet.com/" title="amazlet" target="_blank">amazlet</a> at 15.04.03</div></div><div class="amazlet-detail">テッド・チャン <br />早川書房 <br />売り上げランキング: 10,379<br /></div><div class="amazlet-sub-info" style="float: left;"><div class="amazlet-link" style="margin-top: 5px"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4150114587/diary081213-22/ref=nosim/" name="amazletlink" target="_blank">Amazon.co.jpで詳細を見る</a></div></div></div><div class="amazlet-footer" style="clear: left"></div></div>



]]></content>
  </entry>
  
</feed>
