<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: security | the world as code]]></title>
  <link href="http://chroju.github.io/blog/categories/security/atom.xml" rel="self"/>
  <link href="http://chroju.github.io/"/>
  <updated>2016-01-24T23:00:42+09:00</updated>
  <id>http://chroju.github.io/</id>
  <author>
    <name><![CDATA[chroju]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[暗号化とハッシュ化に関する基本的な事柄まとめ]]></title>
    <link href="http://chroju.github.io/blog/2015/07/20/encryption-hash-at-first/"/>
    <updated>2015-07-20T16:56:06+09:00</updated>
    <id>http://chroju.github.io/blog/2015/07/20/encryption-hash-at-first</id>
    <content type="html"><![CDATA[<p>セキュリティスペシャリスト持ってるはずなのに曖昧な理解で誤魔化してたので自分用まとめ。また書き足すかも。なんか書き足し書き足ししていくようなノートの整理には、編集履歴が見られるQiitaの方が便利なのかなとか思うけど。</p>

<ul>
<li>暗号化とハッシュ化は違う。暗号化はデータの秘匿を目的としており、適切な鍵を用いることで復号が可能。ハッシュ化はデータの置換がそもそもの目的であり、ハッシュ関数により一定のフォーマットへ不可逆の変換を行う。</li>
<li>ただし、衝突耐性を持つことなどにより、セキュリティ用途に適する「暗号学的ハッシュ関数」というものもあるらしい。デジタル署名やメッセージ認証符号への使用を目的とされており、逆にチェックサム等に使用するには計算が「重い」。</li>
</ul>


<h1>暗号</h1>

<p>主なアルゴリズムをざっと。</p>

<h2>RSA</h2>

<ul>
<li>公開鍵暗号。素因数分解の計算難度を根拠としたもの。サマウォで解いてたアレもたぶん素因数分解暗号だが、暗算で解かれたらたまったものではない。</li>
<li>SSHログイン時の鍵認証やSSL認証など、広く使われる。</li>
<li>秘密鍵生成コマンドとして<code>openssl genrsa</code>がある。SSH鍵認証では<code>ssh-keygen</code>を用いる。</li>
</ul>


<h2>DES</h2>

<ul>
<li>共通鍵暗号。鍵長54bitのブロック暗号。</li>
<li>鍵長が短すぎるため、現在では安全ではないとされるが、暗号化復号化処理を3回実行するトリプルDESという形で主に実用されている。</li>
<li><code>openssl genrsa</code>での秘密鍵生成時に、パスフレーズによるトリプルDESでの暗号化を施すため、<code>-des3</code>オプションが用いられる。</li>
</ul>


<h2>AES</h2>

<ul>
<li>共通鍵暗号。DESの安全性低下に伴い開発された、鍵長128bit超のブロック暗号。</li>
</ul>


<h1>ハッシュ</h1>

<h2>ソルト</h2>

<p>ハッシュ化前に対象文字列に付加するランダムな文字列。同一文字列のハッシュ化時に衝突が防げる、レインボーテーブルによる探索に対する妨害になる、といった利点がある。</p>

<h2>フィンガープリント</h2>

<p>SSH初回ログインで表示されるやつ。公開鍵のハッシュ値。<code>~/.ssh/known_hosts</code>に記述され、次回以降のログインで公開鍵の変更有無の確認に使われる。変更があると、サーバーなりすましの危険性もあるため警告が表示される。<code>ssh-keygen -lf</code>でも表示可能。</p>

<h2>md5</h2>

<ul>
<li>出力128bitのハッシュアルゴリズム。ファイル配布時のチェックサムなどに用いられる。</li>
<li>安全性は高くないことが判明しているため、日米ともにSHAの使用が推奨されている。</li>
<li>コマンドは<code>md5sum</code>あるいは<code>openssl md5</code>を使用する。</li>
<li>なおパスワードハッシュ化でよく用いられる<code>openssl passwd</code>はmd5による実装。</li>
</ul>


<h2>sha</h2>

<ul>
<li>Secure Hash Algorithm。暗号学的ハッシュ関数の一つ。</li>
<li>SSL、SSH等で用いられる暗号化アルゴリズム。</li>
<li>SHA-0,1,2,3が存在しており、SHA-1には脆弱性が存在するため、SSL証明書はSHA-2への全面移行が進められている。すでにGoogle ChromeではSHA-1による証明書に対して警告が表示される。</li>
<li>SHA-2は鍵長によりSHA-224、SHA-256、SHA-384、SHA-512といったバリエーションが存在する。</li>
<li>上述の通り<code>openssl passwd</code>はSHA非対応だが、<code>grub-crypt</code>がSHA-2によるハッシュ化に使える模様。
参考: <a href="http://heroween.hateblo.jp/entry/2014/07/28/133713">CentOS6.5でランダムSalt付きSHA-512のシャドウパスワードを生成する - ひろうぃんの雑記</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
