<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lifehack on the world as code</title>
    <link>https://chroju.github.io/categories/lifehack/</link>
    <description>Recent content in Lifehack on the world as code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 24 Jan 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://chroju.github.io/categories/lifehack/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Personal Knowledge Base</title>
      <link>https://chroju.github.io/blog/2016/01/24/personal-knowledge-base/</link>
      <pubDate>Sun, 24 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://chroju.github.io/blog/2016/01/24/personal-knowledge-base/</guid>
      <description>

&lt;p&gt;昨年は転職のゴタゴタがあったりしてメモを取る習慣というものがどこかに消え失せてしまっていたので、年始にあたり生涯幾度目かわからないがメモ環境について再考している。本当に何度目だよ、と思うのだが、これはもう生涯模索しながらいくしかないし、最適解なんてのは時と場合によって変わるものだとは思う。&lt;/p&gt;

&lt;p&gt;しかしオライリーから『エンジニアのための時間管理術』は出ているのに、『情報整理術』が出ていないのはなぜなのか。むしろそっちが職種的に重要じゃないのか。ブログやQiitaでもあまり見かけない。&lt;/p&gt;

&lt;h2 id=&#34;evernoteの呪縛:75a3e4d39cced19f482a87dc88309f83&#34;&gt;Evernoteの呪縛&lt;/h2&gt;

&lt;p&gt;現代においてメモ、ノートというと真っ先に挙がってくるのがEvernoteであり、自分も確かに使ってはいる。使ってはいるが、正直に言って愛憎は入り混じっている。基本的には使いたくない。でも使わずにはいられなくて、ついついいろいろとぶち込んでしまう。&lt;/p&gt;

&lt;p&gt;Evernoteの肝は、ありとあらゆるフォーマットの資料を何でも入れることができて、それがsearchableになることにあると思っている。昨日読んだブログのエントリー。1年前に契約したサービスの証明書。3ヶ月前に読んだ本の感想。そういったものをすべて並列に保存することができ、検索すればすぐに出てくる。放っておけば消えて無くなるような情報が「死蔵」されなくなる。だから取りあえず「いいな」と思ったものがあればEvernoteに入れてしまう。特に開発終了が発表されたClearlyが自分にとってはクリーンヒットで、良いなと思った文章があれば迷わずClearlyを使っていた。ググればまた出ると言われればその通りだが、同じ検索キーワードをまた思い出せるとも限らないし、ページが消滅することだってままある。&lt;/p&gt;

&lt;p&gt;しかし実際に突っ込んだ情報をもう一度掘り出せるのかどうか。文字情報であれば確かに検索できるのだが、画像はどうか。音声は。またpdfは。それを防ぐためか、ノートブックやタグ付けという能動的な整理手法も用意されているわけだが、次々と投げ込んだ資料を1つずつ分類していくのは骨が折れるし、メールクライアントにあるようなオートフィルタリングはいまだにできない（サードパーティーのアプリならあるけど）。また実際に検索をかけたときも、ノートの読み込み速度はそれほど速いものではなく、特にモバイルアプリに関してはどうにもストレスフルだ。&lt;/p&gt;

&lt;p&gt;結果的に何でも入れられるがサルベージが難しいゴミ箱、あれば安心感があるので離れられないけど、積極的に何か活用していこうとは思えない存在と化してきている。&lt;/p&gt;

&lt;h2 id=&#34;何をメモするのか:75a3e4d39cced19f482a87dc88309f83&#34;&gt;何をメモするのか&lt;/h2&gt;

&lt;p&gt;そもそも何をそんなに悩むほどメモしたいのか。改めて考えるとよくわからないなぁで思考が停まりそうになったが、いくつか挙げてみる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tech関連でも日常の中の疑問でもそうだが、ググるのは簡単だがその知識はすぐ忘れてしまう。どこからどんな情報を得て、どんな結論に至ったのかは書き留めておきたい。&lt;/li&gt;
&lt;li&gt;スニペットやチートシート。頭悪いのでコマンドや文法をすぐ参照できるようにしておきたい。&lt;/li&gt;
&lt;li&gt;読書メモ。簡単な本の概要、感想、それを受けて何を実践するのか。&lt;/li&gt;
&lt;li&gt;ポエム。客観的な事実や資料より感情より、主観よりのもの。課題に関する考えとか哲学とか。&lt;/li&gt;
&lt;li&gt;チェックリスト。日常の指針になるような。定例作業の手順もそうだし、持ち物リスト、忘れがちなポリシー的なものとか。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こうして挙げてみると参照頻度、パブリックorプライベートといった軸で分類できそうな気がしてくる。またそれによって選ぶべきツールも変わりそうだ。例えばEvernoteは先に書いた通り遅い、分類が面倒という特徴を自分は見出しているが、逆にそれほど素早く引き出す必要のないもの、つまり参照頻度が低い「もしものためのメモ」などであればEvernoteでも構わないことになる。&lt;/p&gt;

&lt;p&gt;スニペットやチートシートは本当に秒で出てきて欲しいし、シンタックスハイライトが効いてないと辛いみたいなところがあったりもするので、Evernoteには向かないことになる。この目的だと自分の中ではGistやKobitoが最近のヒットではある。&lt;/p&gt;

&lt;p&gt;思うに、Evernoteや梅棹忠夫先生が掲げるような「すべてのメモを一箇所に集める」というのはちょっと厳しいのではないか。目的の違うメモであれば、適切なフォーマットも自ずと変わってくる。もちろん分散していろんなところにメモがある状況というのはわかりにくくはあるが、目的がはっきり定まっていればツールの選択に迷うことはない。自分はEvernoteにスニペットを格納したことはないし、日常生活で使うチェックリストをGistのPublicで保存したこともない。&lt;/p&gt;

&lt;h2 id=&#34;personal-knowledge-base:75a3e4d39cced19f482a87dc88309f83&#34;&gt;Personal Knowledge Base&lt;/h2&gt;

&lt;p&gt;ここでようやくタイトル回収するのだけど、海外ではこの手のツールをPersonal Knowledge Base(PKB)と呼ぶらしい。&lt;a href=&#34;https://en.wikipedia.org/wiki/Personal_knowledge_base&#34;&gt;Wikipediaの記述&lt;/a&gt;の細かさを見ると、国内よりはだいぶホットな話題っぽく思われる。いろいろこのワードでググッてみたのだが、今のところうなずけたのは以下のあたり。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.acuriousmix.com/2014/09/03/designing-a-personal-knowledgebase/&#34;&gt;Designing a Personal Knowledgebase – A Curious Mix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=8270759&#34;&gt;Designing a Personal Knowledgebase | Hacker News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://programmers.stackexchange.com/questions/729/how-do-you-manage-your-knowledge-base&#34;&gt;How do you manage your knowledge base? - Programmers Stack Exchange&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;特に一番上の記事はだいぶ熱い。俺の理想とするPKBはこんなのだ！！！ってめっちゃ細かく書いているが、わりと同意できる内容ではあった。下2つのフォーラム系の記事を見ると、案外多いのが個人Wikiを使っている人。確かにフレキシブルな編集が可能という点では、2016年現在に至ってもWikiの優位性はかなり高い気がする。でもさすがに今更感あるなーということで手を出す気にはなれない。あるいはorg-modeが結構評判よくて、Vimmerじゃなければ手を出していたようには思う。&lt;/p&gt;

&lt;p&gt;PKBの定義に関してはWikipediaの記事にあるが、情報の一次ソースそのものではなくて、そこから得られた知識をまとめるものということ。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Its purpose is not simply to aggregate all the information sources one has seen, but to preserve the knowledge that one has learned from those sources.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;これについては深く同意するところで、情報そのものなら別に本自体とかウェブページを直接見たりとかすればいいんだけど、それら複数の資料から自分なりに導いた知識、学習結果というものをまとめておきたいのだ。そう考えてみると、Qiitaに特にそういう内容は多く書いているし、一次ソースに関してはウェブクリップなり、本のページを撮影したものなりをEvernoteに入れているので、やっぱりツールの棲み分けになってくるのかなぁと思えてくる。ちなみに一次ソースにあたる情報をまとめたものはPIM(Personal Information Management)と言うらしい。&lt;/p&gt;

&lt;h2 id=&#34;結論:75a3e4d39cced19f482a87dc88309f83&#34;&gt;結論？&lt;/h2&gt;

&lt;p&gt;書いていけば結論見えるかなと思ってここまで書いてみたが、なかなか見えてこない。結局のところ自分の中ではGistが一番近くはある。Gistboxを使えばタグ分類ができるし、&lt;a href=&#34;https://github.com/lambdalisue/vim-gista&#34;&gt;vim-gista&lt;/a&gt;を使うことでVimキーバインドでの編集もできる。コードハイライトもMarkdownのプレビューも出来て至れり尽くせり。引っかかるのは非techなメモを入れるのがGitHubである故に心理的に憚られるなぁというのと、モバイル端末からの閲覧にあまりいいツールがないこと。&lt;/p&gt;

&lt;p&gt;んで一方で公開したい情報はこうやってブログにまとめたり、Qiitaにまとめたりもしているので、そこの分断も若干もどかしい。さっきツールは分けるしかないかもと言っておいてアレだが。ちなみにブログはこういう文章過多な場合、いわばポエムだとかツール、技術に関する考察をまとめる場、Qiitaはよりtechそのものに寄ったものを書く場と使い分けている。こういったところで公開共有するほどでもねーやってものはGistかなと。あんまりにも初歩的な内容とかQiitaに流すの憚られるじゃないですか。タグで追ってる人には必ず見られるわけだから。&lt;/p&gt;

&lt;p&gt;Evernoteに関しては、結局一次ソースにあたる情報を端からブチ込んで安心感を得るツールとしては今後も使い続けそう。しかしClearlyがなくなるのが本当につらい。Web Clipperのあの鈍重な動きは「何も考えずとりあえずクリップ」するにはちょっと抵抗ある。仕方ないか。しかしウェブクリップというのもどこまで意味のあるものやら。。その後情報が更新されても追えなくなるわけだし。&lt;/p&gt;

&lt;p&gt;何はともあれ、とりあえず「記録残せ」から始めなくてはと思う。悩んで結論出ないから記録しないみたいな状態が続くのが一番よろしくない。悩みながらも進めていくしかないんだろうな。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>