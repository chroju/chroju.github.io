<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技術勉強全般 on the world as code</title>
    <link>http://localhost:1313/categories/%E6%8A%80%E8%A1%93%E5%8B%89%E5%BC%B7%E5%85%A8%E8%88%AC/</link>
    <description>Recent content in 技術勉強全般 on the world as code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>&amp;copy; Copyright notice</copyright>
    <lastBuildDate>Sun, 20 Oct 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:1313/categories/%E6%8A%80%E8%A1%93%E5%8B%89%E5%BC%B7%E5%85%A8%E8%88%AC/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>短時間に限定して図書館で情報をザッピングするという勉強法</title>
      <link>http://localhost:1313/post/2013-10-20-post/</link>
      <pubDate>Sun, 20 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2013-10-20-post/</guid>
      <description>新しい分野の勉強をするときって、ネットの情報だけでは不十分だったり信頼性に欠けたりするし、だから書籍に頼ろうと思うんだけど、どんな本 を選べばいいのかわからなかったりもして悩ましい。かといって時間をかけて何冊も読む暇もないし、そんなにかけるお金もない。そういうとき、 基本に帰って図書館に行ってみたら良いのですよね。
NISAのこともあって、投資とか金融について少し勉強しようと思い立ったのだけど、特にこの分野って一人の言い分だけを鵜呑みにすると恐ろしく 危険。じゃあ時間を決めて、5冊ぐらいをザックリとザッピングしてみようということで、図書館に行きました。本を選び、時間を決めてザッピン グ。とにかく多くの情報に触れることを重視したので、細部はバンバン読み飛ばす。わからない単語があったら取りあえずメモだけ取っておいて、 あとでググるなり調べることにする。そんな感じで約3時間で計7冊。A4見開きいっぱいに情報を書き留めて、それなりに情報を取り入れられた感じ がした。
図書館を使うメリットとしては、
 お金がかからない（貧乏性でサーセン） 手元の情報じゃ足りないと気付いたとき、すぐ追加の本を探せる とにかく静かで勉強するには快適 ハズレの本を引いたときのガッカリ感が少ない 逆にもし「これは！」という一冊があれば借りて帰れる 後から「あのとき読んだ本もっかい読みたい」と思っても楽に後追い可能  というあたりか。あ、ただ小さな図書館で勉強スペースを長時間独占したりすると迷惑だったりもするので注意ね。ちゃんと勉強が許されてるとこ で。
ちなみに俺が使ったのは日比谷図書文化館。大学によくあるような勉強スペースが設けられてる上、館内のPRONTOで買ったコーヒーを飲みながら本 を読んでもOKだし、平日は22時まで（！！！）やってるから仕事帰りにも寄れて超オススメ。蔵書量はちょっと少ないかもしれんけど、オライリー 本がかなり置いてあったり面白い品揃えではある。あ、当然ながらわりと混んでます。あーやっぱ東京東部で働きてぇな。。。</description>
    </item>
    
    <item>
      <title>技術書のサンプル試す場合はバージョンを揃えるべきなのか</title>
      <link>http://localhost:1313/post/2013-08-03-post/</link>
      <pubDate>Sat, 03 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2013-08-03-post/</guid>
      <description>『RailsによるアジャイルWebアプリケーション開発』、大変くだらないところでつまずいているというか、なんか知らんがエラー出まくりで先に進めず。
問題が起きたのはp.79。モデルクラスのrbファイルにvalidatesメソッドによる検証過程を書き入れ、test/functional/xxxに有効なテストデータ（とされるもの）を入れてrake testコマンドを発行したところ、エラーが出る。何度やってもエラーが出る。仕方ないので一旦先に進もうともしたのだが、次に編集対象になっていたtest/unitフォルダが見当たらない。念のため別プロジェクトを作ったりもしてみたが、やはりtest/unitは生成されなかった。さすがにディレクトリ構造丸ごと違うとなると、自分のミスというよりはバージョンの相違によるものではないかと思い至る。この本ではRubyの1.9.2とrails 3.1.0を使っていたが、僕の環境はRuby2.0とrails 4.0.0だった（もっと他にも「バージョンが原因ではないか？」と思い当たった根拠があったはずなのだが失念。トラブルシュートは記録しながらやるべきだったなー……）。
というわけでRubyとrailsのバージョンを下げる。Rubyについてはrvmで管理しているので簡単に変更できたが、問題はrails。軽くググった感じでは、一度アンインストールしてから再度バージョン指定して入れなおせばよいという話だった。
 #gem uninstall rails #gem install rails -v 3.1.0 が、これだけで再びrake testを試すとまだエラー。Gemfile内のバージョン表記を変えろとのことだったので変更し、#bundle update。bundleについてはよくわかってないのでおいおい調べる予定。
しかし、まだエラー。エラーというより、SECURITY WARNINGとやらが表示された。どうもrails過去バージョンの脆弱性に起因するらしい。こういった事例がいくつかあり、最終的にはRails 3.2.13まで上げざるを得なかった。
popowa: SECURITY WARNING: No secret option provided to Rack::Session::Cookie と出たら
Rails emits warning: &amp;ldquo;Rack::File headers parameter replaces cache_control after Rack 1.5&amp;rdquo; - Stack Overflow
ここまででもうかなり疲れていたのだが、これでもまだ尚エラーが出るから嫌になる。Gemfileのcoffee-railsのバージョンがよろしくないらしく、以下サイトを参考にして編集。
Rails 3.1.3 -&amp;gt; 3.2.11 のアップデートで railties のdependencyが競合エラーになった - The longest day in my life
んで結論を言えばこれでもまだ上手く行かず、最終的にはRailsとRubyのバージョンを揃えた上で、イチからプロジェクトを作りなおしたらやっとエラーが出なくなった。もう自分のやってること何もかも間違ってる気がしてくる。
で、今回の一件からの考察というか帰結なのだが、技術書に沿って勉強していく場合、やはり技術書と同じバージョンの環境で進めていくべきなのだろうか。僕はそのへんわりと甘く見てしまっていたので、今回は「いや最新環境に慣れといた方がいいんじゃね？　Ruby2.0も最近出たとこで覚えといた方が得な気がするし」などという考えでRuby2.0とRails4.0.0を使っていたのだが、結果はこれである。Androidの勉強も似たような考え方でだいたい最新か、あるいは一つ前のOSで構築していたのだが、あちらは後方互換性が高いのか、それほど困ることもなかったので、Ruby on Railsでも安易に同じ事をしてしまった。
新しい環境に慣れておいた方がいい、というのはあると思う。が、技術書を読み進めていく上では、万が一バージョン相違によるエラーが出た場合、今回のように大きなロスを被ることになる。技術書、特にある分野での最初の一冊なんてのはとにかくまずは一冊流してみた方がいいわけで、最新バージョンへの対応なんてのはその後でゆっくり覚えればいいのかもしれない。旧バージョンの方がノウハウが多く蓄積されていて、エラー対処がしやすいという利点もある。とはいえ、Railsは旧バージョンを使っていると脆弱性の警告が出る場合があるので、新しいバージョンを使わざるを得ない場合もあるようなのだが。。。
あと、今回のトラブルシュートでいろいろググってみたところ、Stack Overflowが引っかかってくることが非常に多かった。やっぱ英語は必須。</description>
    </item>
    
  </channel>
</rss>